---
swagger: "2.0"
info:
  description: "Simple Web Blog"
  version: "1.0.0"
  title: "simple web blog"
  termsOfService: "https://swagger.io/terms/"
  contact:
    email: "nanzh@mail2.sysu.edu.cn"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/serviece/Test/1.0.0"
tags:
- name: "article"
  description: "The all things maybe use with article"
- name: "user"
  description: "The way to operate by users"
schemes:
- "https"
paths:
  /user/signin:
    get:
      tags:
      - "user"
      summary: "sign in"
      description: "Check the username and password"
      operationId: "SignIn"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "Success Sign In"
          schema:
            $ref: "#/definitions/response_200"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/response_404"
  /user/articles:
    get:
      tags:
      - "article"
      summary: "Get New Articles"
      description: "Get the articles' titles"
      operationId: "GetArticles"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "the request pages"
        required: true
        type: "string"
        x-exportParamName: "Page"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/ArticlesResponse"
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/response_404"
  /user/article/{id}:
    get:
      tags:
      - "article"
      summary: "The detail of articles"
      description: "Get Aritles' details"
      operationId: "GetArticleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the article"
        required: true
        type: "integer"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Article"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/response_400"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/response_404"



  /user/deleteArticle/{id}:
    get:
      tags:
      - "article"
      summary: "Delete article by id"
      description: "Delete an article"
      operationId: "DeleteArticleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the article"
        required: true
        type: "integer"
        x-exportParaName: "Id"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Success"
        "404":
          description: "Not Found"
  /user/article/{id}/comments:
    get:
      tags:
      - "comment"
      summary: "Get the comments of the article"
      description: "Get the comments of the article"
      operationId: "GetCommentsOfArticle"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the article"
        required: true
        type: "integer"
        x-exportParaName: "Id"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Comments"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/response_400"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/response_404"
    post:
      tags:
      - "comments"
      summary: "Create a new comment"
      description: "Create a new comment"
      operationId: "CreateComment"
      parameters:
      - name: "id"
        in: "path"
        description: "The ID of the article"
        required: true
        type: "integer"
        x-exportParaName: "Id"
        x-exportParamName: "Id"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/body"
        x-exportParaName: "Body"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Comment"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/response_400"
definitions:
  User:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      username: "username"
  Tag:
    type: "object"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  Article:
    type: "object"
    required:
    - "content"
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      date:
        type: "string"
      content:
        type: "string"
    example:
      date: "date"
      author: "author"
      name: "name"
      id: 0
      content: "content"
      tags:
      - name: "name"
      - name: "name"
  ArticleResponse:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
    example:
      name: "name"
      id: 0
  ArticlesResponse:
    properties:
      Articles:
        type: "array"
        items:
          $ref: "#/definitions/ArticleResponse"
    example:
      Articles:
      - name: "name"
        id: 0
      - name: "name"
        id: 0
  Comment:
    type: "object"
    required:
    - "articleId"
    - "author"
    - "content"
    - "date"
    properties:
      date:
        type: "string"
      content:
        type: "string"
      author:
        type: "string"
      articleId:
        type: "integer"
    example:
      date: "date"
      author: "author"
      articleId: 0
      content: "content"
  Comments:
    properties:
      contents:
        type: "array"
        items:
          $ref: "#/definitions/Comment"
    example:
      contents:
      - date: "date"
        author: "author"
        articleId: 0
        content: "content"
      - date: "date"
        author: "author"
        articleId: 0
        content: "content"
  body:
    type: "object"
    properties:
      content:
        type: "string"
      author:
        type: "string"
  response_200:
    type: "object"
    properties:
      token:
        type: "string"
    example:
      token: "token"
  response_400:
    type: "object"
    properties:
      error:
        type: "string"
        example: ""
  response_404:
    type: "object"
    properties:
      error:
        type: "string"
        example: ""
